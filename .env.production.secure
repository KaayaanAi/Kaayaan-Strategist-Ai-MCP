# PRODUCTION SECURITY CONFIGURATION
# ===================================
# This is a production-ready configuration template with secure defaults
# Generate actual secrets using: openssl rand -hex 32

# ==================== SERVER CONFIGURATION ====================
HTTP_MODE=true
NODE_ENV=production
PORT=3000
HOST=0.0.0.0
WEBSOCKET_PORT=3001

# ==================== DATABASE CONFIGURATION ====================
# MongoDB Connection with Authentication
MONGODB_URI=mongodb://kaayaan_admin:REPLACE_WITH_STRONG_PASSWORD@mongo:27017/kaayaan_strategist?authSource=admin&ssl=false&retryWrites=true&w=majority

# Redis Connection with Authentication
REDIS_URL=redis://:REPLACE_WITH_REDIS_PASSWORD@redis:6379/0

# ==================== SECURITY CONFIGURATION ====================
# CRITICAL: Replace with actual secure values
ENABLE_AUTH=true
API_KEY=REPLACE_WITH_64_CHAR_HEX_API_KEY

# CORS Origins - Specify your actual domains
ALLOWED_ORIGINS=https://yourdomain.com,https://api.yourdomain.com

# Database Credentials - Use strong passwords
MONGO_ROOT_USERNAME=kaayaan_admin
MONGO_ROOT_PASSWORD=REPLACE_WITH_STRONG_MONGO_PASSWORD

# Redis Security
REDIS_PASSWORD=REPLACE_WITH_STRONG_REDIS_PASSWORD

# ==================== APPLICATION CONFIGURATION ====================
TIMEZONE=UTC
CACHE_TTL_MINUTES=15
LOG_LEVEL=warn

# ==================== RATE LIMITING ====================
YAHOO_RATE_LIMIT=60
ALPHA_VANTAGE_RATE_LIMIT=5
COINGECKO_RATE_LIMIT=50

# ==================== API KEYS ====================
# External API Keys (Optional)
# ALPHA_VANTAGE_API_KEY=your_alpha_vantage_api_key_here

# ==================== MONITORING & ALERTING ====================
# Health Check Configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30000

# Security Monitoring
SECURITY_MONITORING_ENABLED=true
THREAT_DETECTION_ENABLED=true

# Alert Webhooks (Optional)
# SECURITY_ALERT_WEBHOOK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
# HEALTH_ALERT_WEBHOOK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# ==================== SSL/TLS CONFIGURATION ====================
# For production deployment behind reverse proxy
# SSL_CERT_PATH=/etc/ssl/certs/kaayaan-strategist.pem
# SSL_KEY_PATH=/etc/ssl/private/kaayaan-strategist.key
# SSL_CA_PATH=/etc/ssl/certs/ca-bundle.pem

# ==================== BACKUP CONFIGURATION ====================
# Database Backup Settings
# BACKUP_ENABLED=true
# BACKUP_INTERVAL=86400000
# BACKUP_RETENTION_DAYS=30
# BACKUP_S3_ENDPOINT=https://s3.amazonaws.com
# BACKUP_S3_ACCESS_KEY=your_s3_access_key
# BACKUP_S3_SECRET_KEY=your_s3_secret_key
# BACKUP_S3_BUCKET=kaayaan-strategist-backups

# ==================== PERFORMANCE TUNING ====================
# Node.js Performance
NODE_OPTIONS=--max-old-space-size=2048
UV_THREADPOOL_SIZE=8

# Connection Pool Settings
MONGODB_MAX_POOL_SIZE=50
MONGODB_MIN_POOL_SIZE=5
REDIS_MAX_CLIENTS=100

# ==================== LOGGING CONFIGURATION ====================
# Log Settings
LOG_FORMAT=json
LOG_FILE_ENABLED=true
LOG_FILE_PATH=/var/log/kaayaan-strategist/app.log
LOG_MAX_SIZE=100MB
LOG_MAX_FILES=10

# Audit Logging
AUDIT_LOG_ENABLED=true
AUDIT_LOG_LEVEL=info

# ==================== CONTAINER SECURITY ====================
# Run as non-root user (already configured in Dockerfile)
# USER_ID=1001
# GROUP_ID=1001

# Container Resource Limits (configure in docker-compose or Kubernetes)
# MEMORY_LIMIT=2Gi
# CPU_LIMIT=1000m
# CPU_REQUEST=100m
# MEMORY_REQUEST=512Mi

# ==================== NETWORK SECURITY ====================
# Network Policies
ENABLE_IP_WHITELIST=false
# IP_WHITELIST=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

# Firewall Rules
ENABLE_FIREWALL_RULES=true

# ==================== COMPLIANCE & GOVERNANCE ====================
# Data Retention
DATA_RETENTION_DAYS=90
LOG_RETENTION_DAYS=30

# Privacy Settings
ENABLE_DATA_ANONYMIZATION=true
GDPR_COMPLIANCE_MODE=true

# ==================== DEVELOPMENT OVERRIDES ====================
# These should be REMOVED in production
# DEBUG=false
# DISABLE_RATE_LIMITING=false
# ENABLE_CORS_ALL_ORIGINS=false
# SKIP_AUTH_FOR_LOCALHOST=false

# ==================== SERVICE DISCOVERY ====================
# For microservices architecture
# SERVICE_REGISTRY_URL=http://consul:8500
# SERVICE_NAME=kaayaan-strategist-mcp
# SERVICE_PORT=3000
# SERVICE_HEALTH_CHECK_PATH=/health

# ==================== METRICS & OBSERVABILITY ====================
# Prometheus Metrics
# PROMETHEUS_ENABLED=true
# PROMETHEUS_PORT=9090
# PROMETHEUS_PATH=/metrics

# OpenTelemetry
# OTEL_ENABLED=false
# OTEL_ENDPOINT=http://jaeger:14268/api/traces

# ==================== FEATURE FLAGS ====================
# Protocol Configuration
ENABLE_STDIO=true
ENABLE_HTTP_REST=true
ENABLE_HTTP_MCP=true
ENABLE_WEBSOCKET=true

# Feature Toggles
ENABLE_CACHING=true
ENABLE_COMPRESSION=true
ENABLE_REQUEST_LOGGING=true

# ==================== DISASTER RECOVERY ====================
# Failover Configuration
# ENABLE_FAILOVER=true
# BACKUP_MONGODB_URI=mongodb://backup-mongo:27017/kaayaan_strategist
# BACKUP_REDIS_URL=redis://backup-redis:6379

# Circuit Breaker Settings
CIRCUIT_BREAKER_ENABLED=true
CIRCUIT_BREAKER_THRESHOLD=5
CIRCUIT_BREAKER_TIMEOUT=30000

# ==================== KUBERNETES SPECIFIC ====================
# For Kubernetes deployments
# KUBERNETES_NAMESPACE=production
# KUBERNETES_SERVICE_ACCOUNT=kaayaan-strategist
# KUBERNETES_SECRET_NAME=kaayaan-strategist-secrets

# Pod Security
# SECURITY_CONTEXT_RUN_AS_NON_ROOT=true
# SECURITY_CONTEXT_RUN_AS_USER=1001
# SECURITY_CONTEXT_FS_GROUP=1001

# ==================== CLOUD PROVIDER SPECIFIC ====================
# AWS
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key

# GCP
# GOOGLE_CLOUD_PROJECT=your-project-id
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json

# Azure
# AZURE_TENANT_ID=your_tenant_id
# AZURE_CLIENT_ID=your_client_id
# AZURE_CLIENT_SECRET=your_client_secret

# ==================== DEPLOYMENT METADATA ====================
DEPLOYMENT_VERSION=2.1.0
DEPLOYMENT_DATE=2024-12-15T00:00:00Z
DEPLOYMENT_ENVIRONMENT=production
DEPLOYMENT_COMMIT_SHA=your_git_commit_sha