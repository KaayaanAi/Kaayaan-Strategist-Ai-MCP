# Docker Compose for Kaayaan Strategist AI MCP Server
# Production-ready setup with MongoDB, Redis, and HTTP mode

# Removed obsolete version field

services:
  # Kaayaan Strategist MCP Server
  kaayaan-strategist:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kaayaan-strategist-mcp
    restart: unless-stopped
    ports:
      - "4000:4000"
      - "4001:4001"
    environment:
      # Server Mode
      - HTTP_MODE=true
      - NODE_ENV=production
      - PORT=4000
      - HOST=0.0.0.0
      - WEBSOCKET_PORT=4001
      
      # Database Connections
      - MONGODB_URI=mongodb://mongo:27017/kaayaan_strategist
      - REDIS_URL=redis://redis:6379
      
      # API Keys
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY:-}
      
      # Application Configuration
      - TIMEZONE=Asia/Kuwait
      - CACHE_TTL_MINUTES=15
      - LOG_LEVEL=info
      
      # Rate Limiting
      - YAHOO_RATE_LIMIT=60
      - ALPHA_VANTAGE_RATE_LIMIT=5
      
      # Production Security
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:4000,http://localhost:5678}
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kaayaan-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kaayaan.rule=Host(`kaayaan-strategist.local`)"
      - "traefik.http.services.kaayaan.loadbalancer.server.port=4000"

  # MongoDB Database
  mongo:
    image: mongo:6-jammy
    container_name: kaayaan-mongo
    restart: unless-stopped
    # SECURITY: Remove port exposure in production
    # ports:
    #   - "27017:27017"
    expose:
      - "27017"
    environment:
      - MONGO_INITDB_DATABASE=kaayaan_strategist
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-changeme}
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    command: mongod --auth --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - kaayaan-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: kaayaan-redis
    restart: unless-stopped
    # SECURITY: Remove port exposure in production
    # ports:
    #   - "6379:6379"
    expose:
      - "6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - kaayaan-network

  # Optional: n8n for workflow automation
  n8n:
    image: n8nio/n8n:latest
    container_name: kaayaan-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-changeme}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678
      - GENERIC_TIMEZONE=Asia/Kuwait
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - kaayaan-strategist
    networks:
      - kaayaan-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.local`)"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  # Optional: MongoDB Express for database management (DISABLE IN PRODUCTION)
  mongo-express:
    image: mongo-express:1.0-alpine
    container_name: kaayaan-mongo-express
    restart: unless-stopped
    # SECURITY WARNING: Disable this service in production
    profiles:
      - dev
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-changeme}
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USER:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-changeme}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - kaayaan-network

  # Optional: Redis Commander for cache management (DISABLE IN PRODUCTION)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: kaayaan-redis-commander
    restart: unless-stopped
    # SECURITY WARNING: Disable this service in production
    profiles:
      - dev
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD:-changeme}
      - HTTP_USER=${REDIS_COMMANDER_USER:-admin}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD:-changeme}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - kaayaan-network

networks:
  kaayaan-network:
    driver: bridge
    name: kaayaan-network

volumes:
  mongo_data:
    driver: local
    name: kaayaan_mongo_data
  redis_data:
    driver: local
    name: kaayaan_redis_data
  n8n_data:
    driver: local
    name: kaayaan_n8n_data